# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g1lHfIfNhCRcdU7wLPiigDggAzyq1tDv
"""



import cv2
import numpy as np
from ultralytics import YOLO
import matplotlib.pyplot as plt

#Step 1 from Project
#This step was done on Python

# Step 1: Load the Image
image = cv2.imread('/Users/shahzaibhussain/Documents/AER 850/Project 3/motherboard_image.JPEG')
if image is None:
    raise FileNotFoundError("Image file not found.")
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Step 2: Apply Gaussian Blur
blurred = cv2.GaussianBlur(gray, (5, 5), 0)

# Step 3: Adaptive Thresholding for Better Segmentation
thresh = cv2.adaptiveThreshold(
    blurred, 250, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 11, 2
)

# Step 4: Morphological Operations to Refine Mask
kernel = np.ones((3, 3), np.uint8)
closed = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel)

# Step 5: Edge Detection with Canny
edges = cv2.Canny(closed, 50, 150)

# Step 6: Find Contours
contours, _ = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Step 7: Filter Contours by Area
filtered_contours = [c for c in contours if cv2.contourArea(c) > 800]

# Step 8: Create a Mask and Draw Filtered Contours
mask = np.zeros_like(gray)
cv2.drawContours(mask, filtered_contours, -1, 255, thickness=cv2.FILLED)

# Step 9: Apply the Mask to the Original Image
extracted = cv2.bitwise_and(image, image, mask=mask)

# Step 10: Display and Save Results
cv2.imwrite('extracted_motherboard.JPEG', extracted)


#Step 2 from Project

# Step 1: Load the Pretrained YOLOv8 Nano Model
model = YOLO('yolov8n.pt')

# Step 2: Train the Model
model.train(
    data='/content/drive/MyDrive/AER 850 Project 3/data-2/data.yaml',
    epochs=120,
    batch=6,
    imgsz=1000,
    name='Model',
    workers=4
)

# Step 3: Evaluate the Model

metrics = model.val()
print(metrics)

#Step 3 from Project

eval_path = "/content/drive/MyDrive/AER 850 Project 3/data-2/evaluation"

evaluation_results=model.predict(source= eval_path,save=True)

!pip install ultralytics



